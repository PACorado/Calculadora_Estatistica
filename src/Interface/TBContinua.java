/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.util.Collections;
import java.util.LinkedList;

/**
 *
 * @author Samuel S. Morais
 */
public class TBContinua extends javax.swing.JFrame {

    /**
     * Creates new form tabela
     */
    public TBContinua() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listaVar =  new LinkedList<VariavelContinua>();
        ;
        elementos = elementos = new LinkedList<Elementos>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        TextXi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextFi = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        mediana = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pearson = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        czuber = new javax.swing.JTextField();

        listaVar = org.jdesktop.observablecollections.ObservableCollections.observableList(listaVar);

        listaVar = org.jdesktop.observablecollections.ObservableCollections.observableList(listaVar);

        jScrollPane2.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Xi");

        TextXi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextXiActionPerformed(evt);
            }
        });

        jLabel2.setText("Fi");

        TextFi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFiActionPerformed(evt);
            }
        });

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 11)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listaVar, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${classe}"));
        columnBinding.setColumnName("Classe");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${limiteInferior}"));
        columnBinding.setColumnName("Li");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${limiteSuperior}"));
        columnBinding.setColumnName("Ls");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fi}"));
        columnBinding.setColumnName("Fi");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fr}"));
        columnBinding.setColumnName("Fr");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fac}"));
        columnBinding.setColumnName("Fac");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Mediana");

        mediana.setEditable(false);
        mediana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medianaActionPerformed(evt);
            }
        });

        jLabel4.setText("Moda de Pearson");

        pearson.setEditable(false);
        pearson.setToolTipText("");
        pearson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pearsonActionPerformed(evt);
            }
        });

        jLabel5.setText("Moda de Czuber");

        czuber.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(TextXi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(TextFi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pearson)
                            .addComponent(czuber)
                            .addComponent(mediana)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(0, 196, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(TextXi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TextFi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mediana, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pearson, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(czuber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextXiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextXiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextXiActionPerformed

    private void TextFiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Elementos m;
        VariavelContinua var;
        String xitext = TextXi.getText();
        double xi, AT;
        int fi, linhas;
        xitext = xitext.replace(",", ".");
        xi = Double.parseDouble(xitext);
        fi = Integer.valueOf(TextFi.getText());
        m = new Elementos(xi, fi);
        if (verificaXi(m)) {
            elementos.add(m);
        }

        Collections.sort(elementos);

      /*  for (Elementos listar : elementos) {
            System.out.println("elemento " + listar.getXi() + " frequencia " + listar.getFi());
        }
*/
        if (listaVar.isEmpty()) {
            var = new VariavelContinua(xi, fi);
            listaVar.add(var);
        } else if (jTable1.getRowCount() < defineClasses(QuantidadeTotal())) {
            var = new VariavelContinua(xi, fi);
            listaVar.add(var);
        }

        if (elementos.size() > 1) {
            AT = elementos.get(elementos.size() - 1).getXi() - elementos.get(0).getXi();
        } else {
            AT = 1;
        }
        linhas = jTable1.getRowCount();
        AT = AT / linhas;
        atualizaLimite(AT + 1);
        atualizaFi();
        organizaDados();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void medianaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medianaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medianaActionPerformed

    private void pearsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pearsonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pearsonActionPerformed
    
    public double identificaMedia(){
    double somatorio=0;
    double mediaFi;
    for(VariavelContinua var: listaVar){
        mediaFi = ((var.getLimiteSuperior()+var.getLimiteInferior()) /2) * var.getFi();
                    System.out.println("Xi * Fi = " + mediaFi);
        somatorio += mediaFi;
    }
    somatorio/=QuantidadeTotal();
            System.out.println("media = " + somatorio);

    return somatorio;
    }
    
    public int identificaClasseModal() {
        int i = 0, x = 0;
        for (VariavelContinua v : listaVar) {
            if (x < v.getFi()) {
                i = v.getClasse() - 1;
                x= v.getFi();
            }

        }
        return i;
    }
    
    public double modaPearson(){
        double md= 3 * calculaMediana();
        double media= 2 * identificaMedia();
        double total= md-media;
        return total;
    
    }
    
    public boolean classeVazia(){
        double novaAmp;
        for(VariavelContinua var: listaVar){
            if(var.getFi() == 0){
                novaAmp=var.getAmplitudeTotal() + 0.5;
                
                listaVar.remove(var);
                atualizaLimite(novaAmp);
                atualizaFi();
                return true;
            }
        }
        return false;
    }
    public double modaCzuber(){
        int classeModal = identificaClasseModal();
        double lmo,fant = 0,fmo,fp = 0,h,resultado;
        lmo = listaVar.get(classeModal).getLimiteInferior();
        fmo = listaVar.get(classeModal).getFi();
        if(classeModal>=1 && listaVar.get(classeModal-1).getFi()!=0)
            fant = listaVar.get(classeModal-1).getFi();
        if(classeModal < listaVar.size()-1 && listaVar.get(classeModal+1).getFi()!=0)
            fp=listaVar.get(classeModal+1).getFi();

        h=listaVar.get(classeModal).getAmplitudeTotal();
        if(fant!=0 || fp !=0)
            resultado = (((fmo-fant)/(fant+fp)) *h)+lmo;
        else
            resultado =((fmo-fant) *h)+lmo;
        return resultado;
        
    }
    
    public int identificaClasseMediana(){
    int md,classe;
    md=QuantidadeTotal()/2;
    for(VariavelContinua var: listaVar){    
        if(var.getFac() >= md){
            classe=var.getClasse()-1;
            return classe;
        }
    
    }
    return 0;
    }
    
    public double calculaMediana() {
        double Li, h, somFi, total;
        int facAnt = 0, fi, classeMediana = identificaClasseMediana();
        if (classeMediana >= 1) {
            facAnt = listaVar.get(classeMediana - 1).getFac();
        } 
        Li = listaVar.get(classeMediana).getLimiteInferior();
        fi = listaVar.get(classeMediana).getFi();
        h = listaVar.get(classeMediana).getAmplitudeTotal();
        somFi = QuantidadeTotal() / 2;
        total = (((somFi - facAnt) * h) / fi)+Li;
        return total;

    }

    public void organizaDados() {
        int linhaAtual = 0;
        double cz;
        double md;
        double modaP;
        while(classeVazia());
        int linhaFinal = jTable1.getRowCount() - 1;
        do {
            listaVar.get(linhaAtual).setClasse(linhaAtual + 1);
            fac(linhaAtual);
            linhaAtual++;

        } while (linhaAtual <= linhaFinal);
        
        linhaAtual = 0;
        do {
            fr(linhaAtual);
            Fiacr(linhaAtual);
            linhaAtual++;
        } while (linhaAtual <= linhaFinal);
        
        modaP = modaPearson();
        md = calculaMediana();
        cz = modaCzuber();
        
        mediana.setText(String.valueOf(md));
        pearson.setText(String.valueOf(modaP));
        czuber.setText(String.valueOf(cz));
    }

    public void fr(int row) {
        VariavelContinua m;
        VariavelContinua m2;
        double total;
        m = listaVar.get(row);
        double fiAtual = m.getFi();
        int n = jTable1.getRowCount() - 1;
        if (n > 0) {

            m2 = listaVar.get(n);
            double somatorio = m2.getFac();
            total = (fiAtual * 100) / somatorio;

        } else {
            total = 100;
        }
        m.setFr(total);

    }

    public void Fiacr(int row) {
        VariavelContinua m;
        VariavelContinua m2;
        double total;
        m = listaVar.get(row);
        int n = jTable1.getRowCount() - 1;
        if (row == 0) {
            total = m.getFr();
        } else {
            m2 = listaVar.get(row - 1);
            total = m.getFr() + m2.getFiacr();
        }
        m.setFiacr(total);
    }

    public void atualizaLimite(double amplitude) {
        System.out.println("amplitude =" + amplitude);
        double sup = elementos.get(0).getXi() + amplitude;
        double inf = elementos.get(0).getXi();
        for (VariavelContinua var : listaVar) {
            var.setLimiteSuperior(sup);
            sup = var.getLimiteSuperior() + amplitude;
            var.setLimiteInferior(inf);
            inf = var.getLimiteSuperior();
            var.setAmplitudeTotal(amplitude);
        }

    }

    public void atualizaFi() {
        int fi;
        for (VariavelContinua var : listaVar) {
            fi = 0;
            for (Elementos ele : elementos) {
                if (ele.getXi() >= var.getLimiteInferior() && ele.getXi() < var.getLimiteSuperior()) {
                    fi += ele.getFi();
                }
            }
            var.setFi(fi);
        }

    }

    public double defineClasses(int totalElementos) {
        double x;
        x = Math.sqrt(totalElementos);
        return x;
    }

    public boolean verificaXi(Elementos testa) {
        for (Elementos e : elementos) {
            if (testa.getXi() == e.getXi()) {
                adicionaFi(testa);
                return false;
            }
        }
        return true;
    }

    public void adicionaFi(Elementos m) {
        for (Elementos e : elementos) {
            if (m.getXi() == e.getXi()) {
                e.setFi(m.getFi() + e.getFi());
            }
        }

    }

    public int QuantidadeTotal() {
        int total = 0;
        for (VariavelContinua v : listaVar) {
            total += v.getFi();
        }
        return total;

    }

    public void fac(int row) {
        VariavelContinua m;
        VariavelContinua m2;
        int total;
        m = listaVar.get(row);
        if (row > 0) {
            m2 = listaVar.get(row - 1);
            total = m.getFi() + m2.getFac();
        } else {
            total = m.getFi();
        }
        m.setFac(total);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TBContinua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TBContinua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TBContinua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TBContinua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TBContinua().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextFi;
    private javax.swing.JTextField TextXi;
    private javax.swing.JTextField czuber;
    private java.util.List<Elementos> elementos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private java.util.List<VariavelContinua> listaVar;
    private javax.swing.JTextField mediana;
    private javax.swing.JTextField pearson;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
